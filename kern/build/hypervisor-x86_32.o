       
OUTPUT_FORMAT("elf32-i386")
OUTPUT_ARCH("i386")
ENTRY(__start_bsp)
PHDRS
{
    init PT_LOAD;
    kern PT_LOAD;
}
SECTIONS
{
    .init 0x200000 :
    {
        *(.init)
        *(.initdata)
    } : init = 0x90909090
    . = ALIGN(4K) + 4K; PROVIDE (STACK = .);
    PROVIDE (LOAD_E = .);
    OFFSET = 0xc0000000 - ALIGN (4M);
    PROVIDE (LINK_P = 0xc0000000 - OFFSET);
    .text 0xc0000000 : AT (ADDR (.text) - OFFSET)
    {
        *(.text.hot .text.hot.*)
        *(.text .text.* .gnu.linkonce.t.*)
    } : kern = 0x90909090
    .rodata : AT (ADDR (.rodata) - OFFSET)
    {
        *(.rodata .rodata.* .gnu.linkonce.r.*)
    } : kern
    .fixup : AT (ADDR (.fixup) - OFFSET)
    {
        PROVIDE (FIXUP_S = .);
        KEEP (*(.fixup))
        PROVIDE (FIXUP_E = .);
    } : kern
    .init_array : AT (ADDR (.init_array) - OFFSET)
    {
        PROVIDE (CTORS_L = .);
        KEEP (SORT_BY_INIT_PRIORITY(*)(.init_array.65534 .ctors.00001))
        PROVIDE (CTORS_C = .);
        KEEP (SORT_BY_INIT_PRIORITY(*)(.init_array.65533 .ctors.00002))
        PROVIDE (CTORS_G = .);
        KEEP (SORT_BY_INIT_PRIORITY(*)(.init_array.* .ctors.*))
        KEEP (*(.init_array .ctors))
        PROVIDE (CTORS_E = .);
    } : kern
    .data : AT (ADDR (.data) - OFFSET)
    {
        *(.data .data.* .gnu.linkonce.d.*)
    } : kern
    .bss : AT (ADDR (.bss) - OFFSET)
    {
        *(.bss .bss.* .gnu.linkonce.b.*)
        . = ALIGN(4K);
        _mempool_l = .; PROVIDE (_mempool_p = _mempool_l - OFFSET);
        PROVIDE (PAGE_0 = .); PROVIDE (FRAME_0 = . - OFFSET); . += 4K;
        PROVIDE (PAGE_1 = .); PROVIDE (FRAME_1 = . - OFFSET); . += 4K;
        PROVIDE (PAGE_H = .); PROVIDE (FRAME_H = . - OFFSET); . += 4K;
        PROVIDE (PDBR = . - OFFSET);
        PROVIDE (LVL2L = . - OFFSET);
        PROVIDE (LVL2H = . - OFFSET); . += 4K;
        _mempool_f = .;
        . += 16M;
        . = ALIGN(4M);
        PROVIDE (LINK_E = . - OFFSET);
        PROVIDE (_mempool_e = .);
    } : kern
    .cpulocal (0xd0000000 - (1 << 12) * 1) :
    {
        SORT_BY_ALIGNMENT (*)(.cpulocal.hot)
        SORT_BY_ALIGNMENT (*)(.cpulocal)
    }
    /DISCARD/ :
    {
        *(.note.GNU-stack)
        *(.comment*)
    }
}
